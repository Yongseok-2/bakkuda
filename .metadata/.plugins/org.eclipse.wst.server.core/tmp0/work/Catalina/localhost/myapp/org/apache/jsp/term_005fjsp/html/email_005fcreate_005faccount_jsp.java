/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.96
 * Generated at: 2024-11-30 03:31:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.term_005fjsp.html;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class email_005fcreate_005faccount_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>바꾸다</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"../styles.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"../css/style-login.css\">\r\n");
      out.write("    <script src=\"https://static.nid.naver.com/js/naveridlogin_js_sdk_2.0.2.js\" charset=\"utf-8\"></script>\r\n");
      out.write("    <script type=\"text/javascript\" src=\"https://static.nid.naver.com/js/naverLogin_implicit-1.0.3.js\" charset=\"utf-8\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<body style=\"overflow-x: hidden\">\r\n");
      out.write("\r\n");
      out.write("    <!-- 상단 -->\r\n");
      out.write("	<header class=\"header\">\r\n");
      out.write("        <img src=\"../images/top_banner.svg\" alt=\"맨위 로고\" class=\"top-bar\">\r\n");
      out.write("        <div class=\"search-bar\">\r\n");
      out.write("            <a href=\"../index.jsp\"><img src=\"../images/main_logo.svg\" alt=\"로고\" class=\"logo\"></a>\r\n");
      out.write("            <form id=\"searchForm\" action=\"search_result.html\" method=\"GET\">\r\n");
      out.write("                <div class=\"search-input-container\">\r\n");
      out.write("                    <input type=\"text\" placeholder=\"🔍 물품명, 장터명, 카테고리 태그 등\" class=\"search-input\" id=\"searchInput\" name=\"query\">\r\n");
      out.write("                    <button type=\"submit\" class=\"search-button\" id=\"searchButton\">🔍</button>\r\n");
      out.write("                </div>\r\n");
      out.write("            </form>\r\n");
      out.write("            <div class=\"icons\">\r\n");
      out.write("                <a href=\"bookmark.jsp\"><span><img src=\"../images/bookmark01.png\" alt=\"북마크\" class=\"icons\"></span></a>\r\n");
      out.write("                <span><img src=\"../images/favorite01.png\" alt=\"즐겨찾기\" class=\"icons\"></span>\r\n");
      out.write("                <a href=\"my_interface.jsp\"><span><img src=\"../images/interpace01.png\" alt=\"내정보\" class=\"icons\"></span></a>\r\n");
      out.write("             </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <nav class=\"menu-bar\">\r\n");
      out.write("            <ul>\r\n");
      out.write("                <li><a href=\"#\"><img src=\"../images/category.svg\" alt=\"카테고리\">카테고리</a></li>\r\n");
      out.write("                <li><a href=\"../index.html#my-wants\">내가 원해요</a></li>\r\n");
      out.write("                <li><a href=\"../index.html#others-wants\">상대방이 원해요</a></li>     \r\n");
      out.write("                <li><a href=\"#\">급상승</a></li>\r\n");
      out.write("                <li><a href=\"#\">쏙</a></li>\r\n");
      out.write("                <li><a href=\"#\">이벤트</a></li>\r\n");
      out.write("                <li><a href=\"item.jsp\">상품등록</a></li>            \r\n");
      out.write("            </ul>\r\n");
      out.write("        </nav>\r\n");
      out.write("    </header>\r\n");
      out.write("    \r\n");
      out.write("	<main class=\"login-main\">\r\n");
      out.write("	  <img src=\"../images/main_logo.svg\" alt=\"로고\" class=\"login-logo\">\r\n");
      out.write("	  <div class=\"login-container\">\r\n");
      out.write("		<form id=\"signup-form\" action=\"email_create_process.jsp\" method=\"POST\">\r\n");
      out.write("		    <div class=\"input-group\">\r\n");
      out.write("		        <label for=\"user-id\">아이디</label>\r\n");
      out.write("		        <input type=\"text\" id=\"id\" name=\"id\" placeholder=\"아이디를 입력하세요\" required>\r\n");
      out.write("		    </div>\r\n");
      out.write("		    <div class=\"input-group\">\r\n");
      out.write("		        <label for=\"user-password\">비밀번호</label>\r\n");
      out.write("		        <input type=\"password\" id=\"password\" name=\"pw\" placeholder=\"비밀번호를 입력하세요\" required>\r\n");
      out.write("		    </div>\r\n");
      out.write("		    <div class=\"input-group\">\r\n");
      out.write("		        <label for=\"user-password-confirm\">비밀번호 재입력</label>\r\n");
      out.write("		        <input type=\"password\" id=\"confirm-password\" name=\"confirm_pw\" placeholder=\"비밀번호를 다시 입력하세요\" required>\r\n");
      out.write("		    </div>\r\n");
      out.write("		    <button type=\"submit\" class=\"login-button\">회원가입</button>\r\n");
      out.write("		</form>\r\n");
      out.write("\r\n");
      out.write("	  </div>\r\n");
      out.write("	</main>\r\n");
      out.write("  \r\n");
      out.write("  \r\n");
      out.write("<script>\r\n");
      out.write("    document.getElementById('signup-form').addEventListener('submit', function(event) {\r\n");
      out.write("        const password = document.getElementById('password').value;\r\n");
      out.write("        const confirmPassword = document.getElementById('confirm-password').value;\r\n");
      out.write("\r\n");
      out.write("        if (password !== confirmPassword) {\r\n");
      out.write("            event.preventDefault();\r\n");
      out.write("            alert('비밀번호가 일치하지 않습니다. 다시 확인해주세요.');\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <script src=\"../scripts.js\"></script>\r\n");
      out.write("    <script src=\"https://static.nid.naver.com/js/naveridlogin_js_sdk_2.0.2.js\" charset=\"utf-8\"></script>\r\n");
      out.write("    <script type=\"text/javascript\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
